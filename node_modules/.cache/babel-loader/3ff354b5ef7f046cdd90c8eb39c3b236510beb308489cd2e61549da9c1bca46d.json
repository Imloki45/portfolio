{"ast":null,"code":"var _jsxFileName = \"/Users/sravanimalla/Documents/React/portfolio/src/components/Navbar/ToggleSwitch.js\",\n  _s = $RefreshSig$();\n// ToggleSwitch.js\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from './ThemeContext'; // Adjust the path accordingly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c = ToggleContainer;\nconst ToggleLabel = styled.label`\n  margin-right: 10px;\n`;\n_c2 = ToggleLabel;\nconst ToggleInput = styled.input`\n  appearance: none;\n  width: 40px;\n  height: 20px;\n  border-radius: 10px;\n  background: ${({\n  theme\n}) => theme.toggleBackground};\n  outline: none;\n  transition: background 0.3s;\n  cursor: pointer;\n\n  &:checked {\n    background: ${({\n  theme\n}) => theme.toggleBackgroundChecked};\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background: ${({\n  theme\n}) => theme.toggleHandle};\n    position: relative;\n    top: 1px;\n    left: 1px;\n    transition: transform 0.3s;\n  }\n\n  &:checked::before {\n    transform: translateX(20px);\n  }\n}`;\n_c3 = ToggleInput;\nconst ToggleSwitch = () => {\n  _s();\n  const {\n    toggleTheme,\n    isDarkMode\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ToggleContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ToggleLabel, {\n      children: \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleInput, {\n      type: \"checkbox\",\n      checked: isDarkMode,\n      onChange: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleSwitch, \"1+nnpmKcFddOslVGkPwlnjOV8pA=\", false, function () {\n  return [useTheme];\n});\n_c4 = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ToggleContainer\");\n$RefreshReg$(_c2, \"ToggleLabel\");\n$RefreshReg$(_c3, \"ToggleInput\");\n$RefreshReg$(_c4, \"ToggleSwitch\");","map":{"version":3,"names":["React","useContext","styled","useTheme","jsxDEV","_jsxDEV","ToggleContainer","div","_c","ToggleLabel","label","_c2","ToggleInput","input","theme","toggleBackground","toggleBackgroundChecked","toggleHandle","_c3","ToggleSwitch","_s","toggleTheme","isDarkMode","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c4","$RefreshReg$"],"sources":["/Users/sravanimalla/Documents/React/portfolio/src/components/Navbar/ToggleSwitch.js"],"sourcesContent":["// ToggleSwitch.js\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from './ThemeContext'; // Adjust the path accordingly\n\nconst ToggleContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ToggleLabel = styled.label`\n  margin-right: 10px;\n`;\n\nconst ToggleInput = styled.input`\n  appearance: none;\n  width: 40px;\n  height: 20px;\n  border-radius: 10px;\n  background: ${({ theme }) => theme.toggleBackground};\n  outline: none;\n  transition: background 0.3s;\n  cursor: pointer;\n\n  &:checked {\n    background: ${({ theme }) => theme.toggleBackgroundChecked};\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    background: ${({ theme }) => theme.toggleHandle};\n    position: relative;\n    top: 1px;\n    left: 1px;\n    transition: transform 0.3s;\n  }\n\n  &:checked::before {\n    transform: translateX(20px);\n  }\n}`;\n\nconst ToggleSwitch = () => {\n  const { toggleTheme, isDarkMode } = useTheme();\n\n  return (\n    <ToggleContainer>\n      <ToggleLabel>Dark Mode</ToggleLabel>\n      <ToggleInput\n        type=\"checkbox\"\n        checked={isDarkMode}\n        onChange={toggleTheme}\n      />\n    </ToggleContainer>\n  );\n};\n\nexport default ToggleSwitch;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAI;AACnC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,eAAe;AAKrB,MAAMG,WAAW,GAAGP,MAAM,CAACQ,KAAM;AACjC;AACA,CAAC;AAACC,GAAA,GAFIF,WAAW;AAIjB,MAAMG,WAAW,GAAGV,MAAM,CAACW,KAAM;AACjC;AACA;AACA;AACA;AACA,gBAAgB,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,gBAAiB;AACtD;AACA;AACA;AACA;AACA;AACA,kBAAkB,CAAC;EAAED;AAAM,CAAC,KAAKA,KAAK,CAACE,uBAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,CAAC;EAAEF;AAAM,CAAC,KAAKA,KAAK,CAACG,YAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAACC,GAAA,GA9BGN,WAAW;AAgCjB,MAAMO,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAE9C,oBACEE,OAAA,CAACC,eAAe;IAAAiB,QAAA,gBACdlB,OAAA,CAACI,WAAW;MAAAc,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpCtB,OAAA,CAACO,WAAW;MACVgB,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEP,UAAW;MACpBQ,QAAQ,EAAET;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEtB,CAAC;AAACP,EAAA,CAbID,YAAY;EAAA,QACoBhB,QAAQ;AAAA;AAAA4B,GAAA,GADxCZ,YAAY;AAelB,eAAeA,YAAY;AAAC,IAAAX,EAAA,EAAAG,GAAA,EAAAO,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}