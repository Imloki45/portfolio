{"ast":null,"code":"var _jsxFileName = \"/Users/sravanimalla/Documents/React/portfolio/src/components/Navbar/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ThemeContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { darkTheme, lightTheme } from '../../utils/Themes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n  const theme = isDarkMode ? darkTheme : lightTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children(theme)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"X19l+XQxfs/NBL0ht2VREPaS1+w=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","darkTheme","lightTheme","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","toggleTheme","prevMode","theme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sravanimalla/Documents/React/portfolio/src/components/Navbar/ThemeContext.js"],"sourcesContent":["// ThemeContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { darkTheme, lightTheme } from '../../utils/Themes';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  const toggleTheme = () => {\n    setIsDarkMode((prevMode) => !prevMode);\n  };\n\n  const theme = isDarkMode ? darkTheme : lightTheme;\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {children(theme)}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,SAAS,EAAEC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,OAAOP,UAAU,CAACK,YAAY,CAAC;AACjC,CAAC;AAACE,EAAA,CAFWD,QAAQ;AAIrB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAAEE,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACxC,CAAC;EAED,MAAMC,KAAK,GAAGJ,UAAU,GAAGV,SAAS,GAAGC,UAAU;EAEjD,oBACEE,OAAA,CAACC,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEN,UAAU;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EACvDA,QAAQ,CAACM,KAAK;EAAC;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE5B,CAAC;AAACX,GAAA,CAdWF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}